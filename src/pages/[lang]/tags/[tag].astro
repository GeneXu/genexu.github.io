---
import { getCollection } from "astro:content";
import languages from "../../../i18n/languages";
import Layout from "../../../layouts/Layout.astro";
import SearchBar from "../../../components/SearchBar";
import PostList from "../../../components/PostList/PostList.astro";
import { deconstructSlug, getPostsReplacedByTranslatedPost } from "../../../i18n/utils";

export async function getStaticPaths() {
	const allPosts = await getCollection("blog");
	const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

	const paths = Object.keys(languages).map((lang) => {
		return uniqueTags.map((tag) => {
			const tagFilteredPosts = allPosts.filter((post) => post.data.tags.includes(tag));
			const resultPosts = getPostsReplacedByTranslatedPost(tagFilteredPosts, lang)
			resultPosts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

			return {
				params: { lang, tag },
				props: { posts: resultPosts },
			};
		});
	});

	const flattenedPaths = paths.flat(2);
	return flattenedPaths;
}

const { tag, lang: pageLang } = Astro.params;
const { posts } = Astro.props;

const decoratedPosts = posts.map((post) => {
	const { lang: slugLang, slugWithoutLang } = deconstructSlug(post.slug);
	return {
		...post,
		params: {
			slug: slugWithoutLang,
			lang: pageLang,
			isLanguageNotSupported: slugLang !== pageLang,
			isNoLangPath: false,
		},
	};
});
---

<Layout title={`GeneX.io Posts - ${tag}`} description={`GeneX.io Posts - ${tag}`} lang={pageLang}>
	<div class="flex flex-col space-y-4">
		<div class="flex items-center space-x-2">
			<h1 class="text-2xl">Posts</h1>
			<span
				class="inline-flex items-center rounded-md px-2 py-1 text-sm font-medium text-blue-400 hover:text-blue-500 ring-1 ring-inset ring-blue-600/50"
			>
				{tag}
			</span>
		</div>
		<div class="my-0">
			<SearchBar client:load />
		</div>
		<PostList posts={decoratedPosts} />
	</div>
</Layout>
